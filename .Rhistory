top_2 <- picks %>% group_by(focal, pick) %>% count() %>% filter(pick <= 2) %>% group_by(focal) %>% summarise(top_2 = sum(n)/n_sims)
first_overall <- picks %>% group_by(focal, pick) %>% count() %>% filter(pick == 1) %>% group_by(focal) %>% summarise(first = sum(n)/n_sims)
top_draft_picks <- top_10 %>% left_join(top_5, by = "focal") %>% left_join(top_2, by = "focal") %>% left_join(first_overall, by = "focal") %>% mutate(across(everything(),~ replace(., which(is.na(.)), 0))) %>% arrange(desc(first)) %>% rename(team = focal) %>% select(team,first,top_2,top_5,top_10)
## Division winners
div_ties <- focal %>% group_by(focal, sim) %>% summarise(wins = sum(win)) %>% ungroup() %>% left_join(conf_divs %>% rename(focal = team) %>% select(-conf), by = "focal") %>% group_by(division, sim) %>% filter(wins == max(wins)) %>% mutate(n = n())
div_winners <- div_ties %>% filter(n == 1) %>% select(-n)
# Three teams, tiebreaker 1 (head-to-head)
if (nrow(div_ties %>% filter(n == 3)) > 0) {
div_ties_3 <- div_ties %>% arrange(sim) %>% filter(n == 3) %>% group_by(division, sim) %>% mutate(opp1 = ifelse(focal == focal[1], focal[2], ifelse(focal == focal[2], focal[3], focal[1])), opp2 = ifelse(focal == focal[1], focal[3], ifelse(focal == focal[2], focal[1], focal[2]))) %>% left_join(rename(h2h,opp1 = opp), by = c("focal","opp1","sim")) %>% left_join(rename(h2h,opp2 = opp), by = c("focal","opp2","sim")) %>% mutate(h2h_win_pct = h2h_win_pct.x + h2h_win_pct.y) %>% filter(h2h_win_pct == max(h2h_win_pct)) %>% mutate(n = n())
div_winners <- div_winners %>% bind_rows(div_ties_3 %>% filter(n == 1) %>% select(focal,sim,wins,division)) %>% unique()
div_ties <- div_ties %>% bind_rows(div_ties_3 %>% filter(n == 2) %>% select(focal,sim,wins,division,n)) %>% unique()
}
# Three (or more) teams, tiebreaker 2 (division record)
if (nrow(div_ties_3 %>% filter(n > 2)) > 0) {
div_ties_3 <- div_ties_3 %>% filter(n > 2) %>% left_join(div_record, by = c("focal","sim")) %>% filter(div_win_pct == max(div_win_pct)) %>% mutate(n = n())
div_winners <- div_winners %>% bind_rows(div_ties_3 %>% filter(n == 1) %>% select(focal,sim,wins,division)) %>% unique()
div_ties <- div_ties %>% bind_rows(div_ties_3 %>% filter(n == 2) %>% select(focal,sim,wins,division,n)) %>% unique()
}
# Three teams, tiebreaker 3 (common games)
if (nrow(div_ties_3 %>% filter(n == 3)) > 0) {
div_ties_3 <- div_ties_3 %>% filter(n == 3)
team_trios <- div_ties_3 %>% group_by(sim, division) %>% slice(1)
common_win_pct <- tibble(focal = as.character(), sim = as.integer(), common_win_pct = as.numeric())
for (i in 1:nrow(team_trios)) {
team1_opps <- season_games$opp[season_games$focal == team_trios$focal[i]]
team2_opps <- season_games$opp[season_games$focal == team_trios$opp1[i]]
team3_opps <- season_games$opp[season_games$focal == team_trios$opp2[i]]
common_opps <- team1_opps[team1_opps %in% team2_opps]
common_opps <- common_opps[common_opps %in% team3_opps]
temp <- focal %>% filter(sim == team_trios$sim[i] & focal == team_trios$focal[i] & opp %in% common_opps)
common_win_pct <- bind_rows(common_win_pct,tibble(focal = team_trios$focal[i], sim = team_trios$sim[i], common_win_pct = mean(temp$win)))
temp <- focal %>% filter(sim == team_trios$sim[i] & focal == team_trios$opp1[i] & opp %in% common_opps)
common_win_pct <- bind_rows(common_win_pct,tibble(focal = team_trios$opp1[i], sim = team_trios$sim[i], common_win_pct = mean(temp$win)))
temp <- focal %>% filter(sim == team_trios$sim[i] & focal == team_trios$opp2[i] & opp %in% common_opps)
common_win_pct <- bind_rows(common_win_pct,tibble(focal = team_trios$opp2[i], sim = team_trios$sim[i], common_win_pct = mean(temp$win)))
}
div_ties_3 <- div_ties_3 %>% left_join(common_win_pct, by = c("focal","sim")) %>% filter(common_win_pct == max(common_win_pct)) %>% mutate(n = n())
div_winners <- div_winners %>% bind_rows(div_ties_3 %>% filter(n == 1) %>% select(focal,sim,wins,division)) %>% unique()
div_ties <- div_ties %>% bind_rows(div_ties_3 %>% filter(n == 2) %>% select(focal,sim,wins,division,n)) %>% unique()
}
# Three (or more) teams, tiebreaker 4 (conference record)
if (nrow(div_ties_3 %>% filter(n > 2)) > 0) {
div_ties_3 <- div_ties_3 %>% filter(n > 2) %>% left_join(conf_record, by = c("focal","sim")) %>% filter(conf_win_pct == max(conf_win_pct)) %>% mutate(n = n())
div_winners <- div_winners %>% bind_rows(div_ties_3 %>% filter(n == 1) %>% select(focal,sim,wins,division)) %>% unique()
div_ties <- div_ties %>% bind_rows(div_ties_3 %>% filter(n == 2) %>% select(focal,sim,wins,division,n)) %>% unique()
}
# Two teams, tiebreaker 1 (head-to-head)
if (nrow(div_ties %>% filter(n == 2)) > 0) {
div_ties_2 <- div_ties %>% filter(n == 2) %>% group_by(division, sim) %>% mutate(opp = ifelse(focal == focal[1], focal[2],focal[1])) %>% left_join(h2h, by = c("focal","opp","sim")) %>% filter(h2h_win_pct == max(h2h_win_pct)) %>% mutate(n = n())
div_winners <- div_winners %>% bind_rows(div_ties_2 %>% filter(n == 1) %>% select(focal,sim,wins,division)) %>% unique()
}
# Two teams, tiebreaker 2 (division record)
if (nrow(div_ties_2 %>% filter(n == 2)) > 0) {
div_ties_2 <- div_ties_2 %>% filter(n == 2) %>% left_join(div_record, by = c("focal","sim")) %>% filter(div_win_pct == max(div_win_pct)) %>% mutate(n = n())
div_winners <- div_winners %>% bind_rows(div_ties_2 %>% filter(n == 1) %>% select(focal,sim,wins,division)) %>% unique()
}
# Two teams, tiebreaker 3 (common games)
if (nrow(div_ties_2 %>% filter(n == 2)) > 0) {
div_ties_2 <- div_ties_2 %>% filter(n == 2)
team_pairs <- div_ties_2 %>% group_by(sim, division) %>% slice(1)
common_win_pct <- tibble(focal = as.character(), sim = as.integer(), common_win_pct = as.numeric())
for (i in 1:nrow(team_pairs)) {
team1_opps <- season_games$opp[season_games$focal == team_pairs$focal[i]]
team2_opps <- season_games$opp[season_games$focal == team_pairs$opp[i]]
common_opps <- team1_opps[team1_opps %in% team2_opps]
temp <- focal %>% filter(sim == team_pairs$sim[i] & focal == team_pairs$focal[i] & opp %in% common_opps)
common_win_pct <- bind_rows(common_win_pct,tibble(focal = team_pairs$focal[i], sim = team_pairs$sim[i], common_win_pct = mean(temp$win)))
temp <- focal %>% filter(sim == team_pairs$sim[i] & focal == team_pairs$opp[i] & opp %in% common_opps)
common_win_pct <- bind_rows(common_win_pct,tibble(focal = team_pairs$opp[i], sim = team_pairs$sim[i], common_win_pct = mean(temp$win)))
}
div_ties_2 <- div_ties_2 %>% left_join(common_win_pct, by = c("focal","sim")) %>% filter(common_win_pct == max(common_win_pct)) %>% mutate(n = n())
div_winners <- div_winners %>% bind_rows(div_ties_2 %>% filter(n == 1) %>% select(focal,sim,wins,division)) %>% unique()
}
# Two teams, tiebreaker 4 (conference record)
if (nrow(div_ties_2 %>% filter(n == 2)) > 0) {
div_ties_2 <- div_ties_2 %>% filter(n == 2) %>% left_join(conf_record, by = c("focal","sim")) %>% filter(conf_win_pct == max(conf_win_pct)) %>% mutate(n = n())
div_winners <- div_winners %>% bind_rows(div_ties_2 %>% filter(n == 1) %>% select(focal,sim,wins,division)) %>% unique()
}
# Two teams, tiebreaker 5 (strength of victory)
if (nrow(div_ties_2 %>% filter(n == 2)) > 0) {
div_ties_2 <- div_ties_2 %>% filter(n == 2) %>% left_join(sov, by = c("focal","sim")) %>% filter(sov == max(sov)) %>% mutate(n = n())
div_winners <- div_winners %>% bind_rows(div_ties_2 %>% filter(n == 1) %>% select(focal,sim,wins,division)) %>% unique()
}
# Two teams, tiebreaker 6 (strength of schedule) and then random winner
if (nrow(div_ties_2 %>% filter(n == 2)) > 0) {
div_ties_2 <- div_ties_2 %>% filter(n == 2) %>% left_join(sos, by = c("focal","sim")) %>% filter(sos == max(sos)) %>% mutate(random = runif(n())) %>% arrange(random) %>% slice(1)
div_winners <- div_winners %>% bind_rows(div_ties_2 %>% select(focal,sim,wins,division)) %>% unique()
}
## Playoff Bye
bye_ties <- focal %>% filter(paste(focal,sim) %in% paste(div_winners$focal,div_winners$sim)) %>% group_by(focal, sim) %>% summarise(wins = sum(win)) %>% left_join(rename(conf_divs,focal = team), by = "focal") %>% select(-division) %>% group_by(conf, sim) %>% filter(wins == max(wins)) %>% mutate(n = n())
byes <- bye_ties %>% filter(n == 1)
# Four teams, tiebreaker 1 (head-to-head sweep)
if (nrow(bye_ties %>% filter(n == 4)) > 0) {
bye_ties_4 <- bye_ties %>% arrange(sim) %>% filter(n == 4) %>% group_by(conf, sim) %>% mutate(opp1 = ifelse(focal == focal[1], focal[2], ifelse(focal == focal[2], focal[3], ifelse(focal == focal[3], focal[4], focal[1]))), opp2 = ifelse(focal == focal[1], focal[3], ifelse(focal == focal[2], focal[4], ifelse(focal == focal[3], focal[1], focal[2]))), opp3 = ifelse(focal == focal[1], focal[4], ifelse(focal == focal[2], focal[1], ifelse(focal == focal[3], focal[2], focal[3])))) %>% left_join(rename(h2h,opp1 = opp, h2h1 = h2h_win_pct), by = c("focal","opp1","sim")) %>% left_join(rename(h2h,opp2 = opp, h2h2 = h2h_win_pct), by = c("focal","opp2","sim")) %>% left_join(rename(h2h,opp3 = opp, h2h3 = h2h_win_pct), by = c("focal","opp3","sim")) %>% mutate(h2h_win_pct = h2h1 + h2h2 + h2h3, all_wins = ifelse(h2h_win_pct == 3,1,0), all_losses = ifelse(h2h_win_pct == 0,1,0), across(everything(),~ replace(., which(is.na(.)), 0))) %>% filter(all_losses != 1) %>% mutate(n = n())
byes <- byes %>% bind_rows(bye_ties_4 %>% filter(all_wins == 1) %>% select(focal,sim,wins,conf,n)) %>% unique()
bye_ties <- bye_ties %>% bind_rows(bye_ties_4 %>% filter(n > 1) %>% select(focal,sim,wins,conf,n)) %>% unique()
}
# Three teams, tiebreaker 1 (head-to-head sweep)
if (nrow(bye_ties %>% filter(n == 3)) > 0) {
bye_ties_3 <- bye_ties %>% arrange(sim) %>% filter(n == 3) %>% group_by(conf, sim) %>% mutate(opp1 = ifelse(focal == focal[1], focal[2], ifelse(focal == focal[2], focal[3], focal[1])), opp2 = ifelse(focal == focal[1], focal[3], ifelse(focal == focal[2], focal[1], focal[2]))) %>% left_join(rename(h2h,opp1 = opp), by = c("focal","opp1","sim")) %>% left_join(rename(h2h,opp2 = opp), by = c("focal","opp2","sim")) %>% mutate(h2h_win_pct = h2h_win_pct.x + h2h_win_pct.y, all_wins = ifelse(h2h_win_pct == 2,1,0), all_losses = ifelse(h2h_win_pct == 0,1,0), across(everything(),~ replace(., which(is.na(.)), 0))) %>% filter(all_losses != 1) %>% mutate(n = n())
byes <- byes %>% bind_rows(bye_ties_3 %>% filter(all_wins == 1) %>% select(focal,sim,wins,conf,n)) %>% unique()
bye_ties <- bye_ties %>% bind_rows(bye_ties_3 %>% filter(n == 2) %>% select(focal,sim,wins,conf,n)) %>% unique()
bye_ties_3 <- bye_ties_3 %>% filter(n == 3)
}
if (nrow(bye_ties %>% filter(n == 4)) > 0) {
bye_ties_3 <- bye_ties_3 %>% bind_rows(bye_ties_4 %>% filter(n > 2) %>% select(focal,sim,wins,conf,n)) %>% unique()
}
# Three (or more) teams, tiebreaker 2 (conference record)
if (nrow(bye_ties_3) > 0) {
bye_ties_3 <- bye_ties_3 %>% select(focal:conf) %>% left_join(conf_record, by = c("focal","sim")) %>% filter(conf_win_pct == max(conf_win_pct)) %>% mutate(n = n())
byes <- byes %>% bind_rows(bye_ties_3 %>% filter(n == 1) %>% select(focal,sim,wins,conf)) %>% unique()
bye_ties <- bye_ties %>% bind_rows(bye_ties_3 %>% filter(n == 2) %>% select(focal,sim,wins,conf,n)) %>% unique()
}
# Three teams, tiebreaker 3 (common games)
if (nrow(bye_ties_3 %>% filter(n == 3)) > 0) {
bye_ties_3 <- bye_ties_3 %>% filter(n == 3)
team_trios <- bye_ties_3 %>% group_by(sim, conf) %>% slice(1)
common_win_pct <- tibble(focal = as.character(), sim = as.integer(), common_win_pct = as.numeric())
for (i in 1:nrow(team_trios)) {
team1_opps <- season_games$opp[season_games$focal == team_trios$focal[i]]
team2_opps <- season_games$opp[season_games$focal == team_trios$opp1[i]]
team3_opps <- season_games$opp[season_games$focal == team_trios$opp2[i]]
common_opps <- team1_opps[team1_opps %in% team2_opps]
common_opps <- common_opps[common_opps %in% team3_opps]
temp <- focal %>% filter(sim == team_trios$sim[i] & focal == team_trios$focal[i] & opp %in% common_opps)
common_win_pct <- bind_rows(common_win_pct,tibble(focal = team_trios$focal[i], sim = team_trios$sim[i], common_win_pct = mean(temp$win)))
temp <- focal %>% filter(sim == team_trios$sim[i] & focal == team_trios$opp1[i] & opp %in% common_opps)
common_win_pct <- bind_rows(common_win_pct,tibble(focal = team_trios$opp1[i], sim = team_trios$sim[i], common_win_pct = mean(temp$win)))
temp <- focal %>% filter(sim == team_trios$sim[i] & focal == team_trios$opp2[i] & opp %in% common_opps)
common_win_pct <- bind_rows(common_win_pct,tibble(focal = team_trios$opp2[i], sim = team_trios$sim[i], common_win_pct = mean(temp$win)))
}
bye_ties_3 <- bye_ties_3 %>% left_join(common_win_pct, by = c("focal","sim")) %>% filter(common_win_pct == max(common_win_pct)) %>% mutate(n = n())
byes <- byes %>% bind_rows(bye_ties_3 %>% filter(n == 1) %>% select(focal,sim,wins,conf)) %>% unique()
bye_ties <- bye_ties %>% bind_rows(bye_ties_3 %>% filter(n == 2) %>% select(focal,sim,wins,conf,n)) %>% unique()
}
team1_opps <- season_games$opp[season_games$focal == team_trios$focal[i]]
season_games$focal
team_trios$focal[i]
season_games$focal == team_trios$focal[i]
season_games$opp[season_games$focal == team_trios$focal[i]]
team1_opps <- season_games$opp[season_games$focal == team_trios$focal[i]]
team2_opps <- season_games$opp[season_games$focal == team_trios$opp1[i]]
team3_opps <- season_games$opp[season_games$focal == team_trios$opp2[i]]
common_opps <- team1_opps[team1_opps %in% team2_opps]
common_opps <- common_opps[common_opps %in% team3_opps]
temp <- focal %>% filter(sim == team_trios$sim[i] & focal == team_trios$focal[i] & opp %in% common_opps)
common_win_pct <- bind_rows(common_win_pct,tibble(focal = team_trios$focal[i], sim = team_trios$sim[i], common_win_pct = mean(temp$win)))
temp <- focal %>% filter(sim == team_trios$sim[i] & focal == team_trios$opp1[i] & opp %in% common_opps)
common_win_pct <- bind_rows(common_win_pct,tibble(focal = team_trios$opp1[i], sim = team_trios$sim[i], common_win_pct = mean(temp$win)))
View(temp)
temp <- focal %>% filter(sim == team_trios$sim[i] & focal == team_trios$opp1[i] & opp %in% common_opps)
team1_opps <- season_games$opp[season_games$focal == team_trios$focal[i]]
team2_opps <- season_games$opp[season_games$focal == team_trios$opp1[i]]
team3_opps <- season_games$opp[season_games$focal == team_trios$opp2[i]]
common_opps <- team1_opps[team1_opps %in% team2_opps]
common_opps <- common_opps[common_opps %in% team3_opps]
temp <- focal %>% filter(sim == team_trios$sim[i] & focal == team_trios$focal[i] & opp %in% common_opps)
temp
team_trios
bye_ties_3
bye_ties_3 <- bye_ties_3 %>% filter(n == 3) %>% mutate(opp1 = ifelse(focal == focal[1], focal[2], ifelse(focal == focal[2], focal[3], focal[1])), opp2 = ifelse(focal == focal[1], focal[3], ifelse(focal == focal[2], focal[1], focal[2])))
bye_ties_3
team_trios <- bye_ties_3 %>% group_by(sim, conf) %>% slice(1)
common_win_pct <- tibble(focal = as.character(), sim = as.integer(), common_win_pct = as.numeric())
team1_opps <- season_games$opp[season_games$focal == team_trios$focal[i]]
team2_opps <- season_games$opp[season_games$focal == team_trios$opp1[i]]
team3_opps <- season_games$opp[season_games$focal == team_trios$opp2[i]]
common_opps <- team1_opps[team1_opps %in% team2_opps]
common_opps <- common_opps[common_opps %in% team3_opps]
team_trios
bye_ties_3
bye_ties_3 %>% left_join(common_win_pct, by = c("focal","sim"))
bye_ties_3 %>% left_join(common_win_pct, by = c("focal","sim")) %>% filter(common_win_pct == max(common_win_pct)) %>% mutate(common_win_pct = ifelse(is.na(common_win_pct),0,common_win_pct)) %>% mutate(n = n())
bye_ties_3 %>% left_join(common_win_pct, by = c("focal","sim")) %>% mutate(common_win_pct = ifelse(is.na(common_win_pct),0,common_win_pct)) %>% filter(common_win_pct == max(common_win_pct)) %>% mutate(n = n())
if (nrow(bye_ties_3 %>% filter(n == 3)) > 0) {
bye_ties_3 <- bye_ties_3 %>% filter(n == 3) %>% mutate(opp1 = ifelse(focal == focal[1], focal[2], ifelse(focal == focal[2], focal[3], focal[1])), opp2 = ifelse(focal == focal[1], focal[3], ifelse(focal == focal[2], focal[1], focal[2])))
team_trios <- bye_ties_3 %>% group_by(sim, conf) %>% slice(1)
common_win_pct <- tibble(focal = as.character(), sim = as.integer(), common_win_pct = as.numeric())
for (i in 1:nrow(team_trios)) {
team1_opps <- season_games$opp[season_games$focal == team_trios$focal[i]]
team2_opps <- season_games$opp[season_games$focal == team_trios$opp1[i]]
team3_opps <- season_games$opp[season_games$focal == team_trios$opp2[i]]
common_opps <- team1_opps[team1_opps %in% team2_opps]
common_opps <- common_opps[common_opps %in% team3_opps]
if (length(common_opps) >= 4) {
temp <- focal %>% filter(sim == team_trios$sim[i] & focal == team_trios$focal[i] & opp %in% common_opps)
common_win_pct <- bind_rows(common_win_pct,tibble(focal = team_trios$focal[i], sim = team_trios$sim[i], common_win_pct = mean(temp$win)))
temp <- focal %>% filter(sim == team_trios$sim[i] & focal == team_trios$opp1[i] & opp %in% common_opps)
common_win_pct <- bind_rows(common_win_pct,tibble(focal = team_trios$opp1[i], sim = team_trios$sim[i], common_win_pct = mean(temp$win)))
temp <- focal %>% filter(sim == team_trios$sim[i] & focal == team_trios$opp2[i] & opp %in% common_opps)
common_win_pct <- bind_rows(common_win_pct,tibble(focal = team_trios$opp2[i], sim = team_trios$sim[i], common_win_pct = mean(temp$win)))
}
}
bye_ties_3 <- bye_ties_3 %>% left_join(common_win_pct, by = c("focal","sim")) %>% mutate(common_win_pct = ifelse(is.na(common_win_pct),0,common_win_pct)) %>% filter(common_win_pct == max(common_win_pct)) %>% mutate(n = n())
byes <- byes %>% bind_rows(bye_ties_3 %>% filter(n == 1) %>% select(focal,sim,wins,conf)) %>% unique()
bye_ties <- bye_ties %>% bind_rows(bye_ties_3 %>% filter(n == 2) %>% select(focal,sim,wins,conf,n)) %>% unique()
}
bye_ties_3
(nrow(bye_ties_3 %>% filter(n > 3)) > 0
)
bye_ties_3
bye_ties_3 %>% filter(n >= 3) %>% left_join(sov, by = c("focal","sim")) %>% filter(sov == max(sov)) %>% mutate(n = n())
source("~/Library/CloudStorage/GoogleDrive-jonathanjkent@gmail.com/My Drive/nfl_odds.R")
as_tibble(elo::final.elos(elo), rownames = "focal") %>%
rename(elo = value) %>%
left_join(byes %>% group_by(focal) %>% summarise(bye = n()/n_sims*100), by = "focal") %>%
left_join(div_winners %>% group_by(focal) %>% summarise(div = n()/n_sims*100), by = "focal") %>%
rename(team = focal) %>%
left_join(top_draft_picks, by = "team") %>%
mutate(across(everything(),~ replace(., which(is.na(.)), 0))) %>%
arrange(desc(elo))
print(nrow(byes) == n_sim*2)
print(nrow(byes) == n_sims*2)
print(nrow(div_winners) == n_sims*8)
byes
div_winners
bye_ties_2
as_tibble(elo::final.elos(elo), rownames = "focal") %>%
rename(elo = value) %>%
left_join(byes %>% group_by(focal) %>% summarise(bye = n()/n_sims*100), by = "focal") %>%
left_join(div_winners %>% group_by(focal) %>% summarise(div = n()/n_sims*100), by = "focal") %>%
rename(team = focal) %>%
left_join(top_draft_picks, by = "team") %>%
mutate(across(everything(),~ replace(., which(is.na(.)), 0))) %>%
arrange(desc(elo))
byes %>% unique()
byes %>% select(focal,sim) %>% unique()
div_winners %>% ungroup() %>% select(focal,sim,division) %>% unique()
div_ties_2
nrow(div_ties_2 %>% filter(n == 2))
div_ties_3
div_ties %>% filter(n == 4)
div_ties %>% arrange(sim) %>% filter(n == 4) %>% left_join(div_record, by = c("focal","sim")) %>% filter(div_win_pct == max(div_win_pct))
div_ties %>% arrange(sim) %>% filter(n == 4) %>% left_join(div_record, by = c("focal","sim")) %>% filter(div_win_pct == max(div_win_pct)) %>% mutate(n = n())
div_ties
div_ties %>% bind_rows(div_ties %>% arrange(sim) %>% filter(n == 4) %>% left_join(div_record, by = c("focal","sim")) %>% filter(div_win_pct == max(div_win_pct)) %>% mutate(n = n()))
div_ties %>% bind_rows(div_ties %>% arrange(sim) %>% filter(n == 4) %>% left_join(div_record, by = c("focal","sim")) %>% filter(div_win_pct == max(div_win_pct)) %>% mutate(n = n()) %>% select(-div_win_pct))
div_ties %>% bind_rows(div_ties %>% arrange(sim) %>% filter(n == 4) %>% left_join(div_record, by = c("focal","sim")) %>% filter(div_win_pct == max(div_win_pct)) %>% mutate(n = n()) %>% select(-div_win_pct)) %>% filter(n < 4)
source("~/Library/CloudStorage/GoogleDrive-jonathanjkent@gmail.com/My Drive/nfl_odds.R")
source("~/Library/CloudStorage/GoogleDrive-jonathanjkent@gmail.com/My Drive/nfl_odds.R")
library(tidyverse)
library(nflfastR)
library(elo)
options(dplyr.summarise.inform=F)
n_sims <- 1000
#### Load games and Elo ####
conf_divs <- read_csv("http://nflgamedata.com/standings.csv") %>% filter(season == max(season)) %>% select(conf,division,team)
all_games <- read_csv("http://nflgamedata.com/games.csv") %>%
mutate(home_team = ifelse(home_team == "SD","LAC",home_team),
home_team = ifelse(home_team == "OAK","LV",home_team),
home_team = ifelse(home_team == "STL","LA",home_team),
away_team = ifelse(away_team == "SD","LAC",away_team),
away_team = ifelse(away_team == "OAK","LV",away_team),
away_team = ifelse(away_team == "STL","LA",away_team),
neutral = ifelse(game_type == "SB",1,0))
season_games <- all_games %>% filter(season == max(season))
season_games <- bind_rows(tibble(focal = season_games$home_team, opp = season_games$away_team),
tibble(focal = season_games$away_team, opp = season_games$home_team))
elo <- elo.run(score(home_score, away_score) ~ adjust(home_team, 48) + away_team + regress(season, to = 1500, by = 0.333) + k(20*log(abs(home_score - away_score) + 1)) + neutral(neutral), data = all_games)
comp_games <- all_games %>% filter(season == max(season) & !is.na(home_score)) %>% mutate(home_win = ifelse(home_score>away_score,1,ifelse(home_score<away_score,0,0.5)))
sim_games <- all_games %>% filter(season == max(season) & is.na(home_score) & game_type == "REG") %>% select(home_team,away_team) %>% mutate(home_win_pred = round(predict(elo,.),3)) %>% expand_grid(sim = 1:n_sims) %>% mutate(random = round(runif(nrow(.)),3), home_win = ifelse(random<home_win_pred,1,ifelse(random>home_win_pred,0,0.5)))
focal <- bind_rows(bind_rows(tibble(focal = comp_games$home_team,
opp = comp_games$away_team,
win = comp_games$home_win),
tibble(focal = comp_games$away_team,
opp = comp_games$home_team,
win = abs(comp_games$home_win-1))) %>%
expand_grid(sim = 1:n_sims),
bind_rows(tibble(focal = sim_games$home_team,
opp = sim_games$away_team,
win = sim_games$home_win,
sim = sim_games$sim),
tibble(focal = sim_games$away_team,
opp = sim_games$home_team,
win = abs(sim_games$home_win-1),
sim = sim_games$sim)))
#### Tiebreaking assets ####
## Strength of schedule
win_pct <- focal %>% group_by(focal, sim) %>% summarise(opp_win_pct = mean(win)) %>% rename(opp = focal)
sos <- focal %>% left_join(win_pct, by = c("opp","sim")) %>% group_by(focal, sim) %>% summarise(sos = mean(opp_win_pct))
## Strength of victory
sov <- focal %>% filter(win == 1) %>% left_join(win_pct, by = c("opp","sim")) %>% group_by(focal, sim) %>% summarise(sov = mean(opp_win_pct))
## Head to head
h2h <- focal %>% group_by(focal, opp, sim) %>% summarise(h2h_win_pct = mean(win))
## Division record
div_record <- focal %>% left_join(conf_divs %>% rename(focal_div = division, focal = team) %>% select(-conf), by = "focal") %>% left_join(conf_divs %>% rename(opp_div = division, opp = team) %>% select(-conf), by = "opp") %>% filter(focal_div == opp_div) %>% group_by(focal, sim) %>% summarise(div_win_pct = mean(win))
## Conference record
conf_record <- focal %>% left_join(conf_divs %>% rename(focal_conf = conf, focal = team) %>% select(-division), by = "focal") %>% left_join(conf_divs %>% rename(opp_conf = conf, opp = team) %>% select(-division), by = "opp") %>% filter(focal_conf == opp_conf) %>% group_by(focal, sim) %>% summarise(conf_win_pct = mean(win))
#### Various odds ####
## Top draft picks
picks <- focal %>% group_by(focal, sim) %>% summarise(wins = sum(win)) %>% left_join(sos, by = c("focal","sim")) %>% group_by(sim) %>% arrange(wins, sos) %>% mutate(pick = 1:32)
top_10 <- picks %>% group_by(focal, pick) %>% count() %>% filter(pick <= 10) %>% group_by(focal) %>% summarise(top_10 = sum(n)/n_sims)
top_5 <- picks %>% group_by(focal, pick) %>% count() %>% filter(pick <= 5) %>% group_by(focal) %>% summarise(top_5 = sum(n)/n_sims)
top_2 <- picks %>% group_by(focal, pick) %>% count() %>% filter(pick <= 2) %>% group_by(focal) %>% summarise(top_2 = sum(n)/n_sims)
first_overall <- picks %>% group_by(focal, pick) %>% count() %>% filter(pick == 1) %>% group_by(focal) %>% summarise(first = sum(n)/n_sims)
top_draft_picks <- top_10 %>% left_join(top_5, by = "focal") %>% left_join(top_2, by = "focal") %>% left_join(first_overall, by = "focal") %>% mutate(across(everything(),~ replace(., which(is.na(.)), 0))) %>% arrange(desc(first)) %>% rename(team = focal) %>% select(team,first,top_2,top_5,top_10)
## Division winners
div_ties <- focal %>% group_by(focal, sim) %>% summarise(wins = sum(win)) %>% ungroup() %>% left_join(conf_divs %>% rename(focal = team) %>% select(-conf), by = "focal") %>% group_by(division, sim) %>% filter(wins == max(wins)) %>% mutate(n = n())
div_winners <- div_ties %>% filter(n == 1) %>% select(-n)
# Four teams
if (nrow(div_ties %>% filter(n == 4)) > 0) {
div_ties <- div_ties %>% bind_rows(div_ties %>% arrange(sim) %>% filter(n == 4) %>% left_join(div_record, by = c("focal","sim")) %>% filter(div_win_pct != min(div_win_pct)) %>% mutate(n = n()) %>% select(-div_win_pct)) %>% filter(n < 4)
}
# Three teams, tiebreaker 1 (head-to-head)
if (nrow(div_ties %>% filter(n == 3)) > 0) {
div_ties_3 <- div_ties %>% arrange(sim) %>% filter(n == 3) %>% group_by(division, sim) %>% mutate(opp1 = ifelse(focal == focal[1], focal[2], ifelse(focal == focal[2], focal[3], focal[1])), opp2 = ifelse(focal == focal[1], focal[3], ifelse(focal == focal[2], focal[1], focal[2]))) %>% left_join(rename(h2h,opp1 = opp), by = c("focal","opp1","sim")) %>% left_join(rename(h2h,opp2 = opp), by = c("focal","opp2","sim")) %>% mutate(h2h_win_pct = h2h_win_pct.x + h2h_win_pct.y) %>% filter(h2h_win_pct == max(h2h_win_pct)) %>% mutate(n = n())
div_winners <- div_winners %>% bind_rows(div_ties_3 %>% filter(n == 1) %>% select(focal,sim,wins,division)) %>% unique()
div_ties <- div_ties %>% bind_rows(div_ties_3 %>% filter(n == 2) %>% select(focal,sim,wins,division,n)) %>% unique()
}
# Three (or more) teams, tiebreaker 2 (division record)
if (nrow(div_ties_3 %>% filter(n > 2)) > 0) {
div_ties_3 <- div_ties_3 %>% filter(n > 2) %>% left_join(div_record, by = c("focal","sim")) %>% filter(div_win_pct == max(div_win_pct)) %>% mutate(n = n())
div_winners <- div_winners %>% bind_rows(div_ties_3 %>% filter(n == 1) %>% select(focal,sim,wins,division)) %>% unique()
div_ties <- div_ties %>% bind_rows(div_ties_3 %>% filter(n == 2) %>% select(focal,sim,wins,division,n)) %>% unique()
}
# Three teams, tiebreaker 3 (common games)
if (nrow(div_ties_3 %>% filter(n == 3)) > 0) {
div_ties_3 <- div_ties_3 %>% filter(n == 3)
team_trios <- div_ties_3 %>% group_by(sim, division) %>% slice(1)
common_win_pct <- tibble(focal = as.character(), sim = as.integer(), common_win_pct = as.numeric())
for (i in 1:nrow(team_trios)) {
team1_opps <- season_games$opp[season_games$focal == team_trios$focal[i]]
team2_opps <- season_games$opp[season_games$focal == team_trios$opp1[i]]
team3_opps <- season_games$opp[season_games$focal == team_trios$opp2[i]]
common_opps <- team1_opps[team1_opps %in% team2_opps]
common_opps <- common_opps[common_opps %in% team3_opps]
temp <- focal %>% filter(sim == team_trios$sim[i] & focal == team_trios$focal[i] & opp %in% common_opps)
common_win_pct <- bind_rows(common_win_pct,tibble(focal = team_trios$focal[i], sim = team_trios$sim[i], common_win_pct = mean(temp$win)))
temp <- focal %>% filter(sim == team_trios$sim[i] & focal == team_trios$opp1[i] & opp %in% common_opps)
common_win_pct <- bind_rows(common_win_pct,tibble(focal = team_trios$opp1[i], sim = team_trios$sim[i], common_win_pct = mean(temp$win)))
temp <- focal %>% filter(sim == team_trios$sim[i] & focal == team_trios$opp2[i] & opp %in% common_opps)
common_win_pct <- bind_rows(common_win_pct,tibble(focal = team_trios$opp2[i], sim = team_trios$sim[i], common_win_pct = mean(temp$win)))
}
div_ties_3 <- div_ties_3 %>% left_join(common_win_pct, by = c("focal","sim")) %>% filter(common_win_pct == max(common_win_pct)) %>% mutate(n = n())
div_winners <- div_winners %>% bind_rows(div_ties_3 %>% filter(n == 1) %>% select(focal,sim,wins,division)) %>% unique()
div_ties <- div_ties %>% bind_rows(div_ties_3 %>% filter(n == 2) %>% select(focal,sim,wins,division,n)) %>% unique()
}
# Three (or more) teams, tiebreaker 4 (conference record)
if (nrow(div_ties_3 %>% filter(n > 2)) > 0) {
div_ties_3 <- div_ties_3 %>% filter(n > 2) %>% left_join(conf_record, by = c("focal","sim")) %>% filter(conf_win_pct == max(conf_win_pct)) %>% mutate(n = n())
div_winners <- div_winners %>% bind_rows(div_ties_3 %>% filter(n == 1) %>% select(focal,sim,wins,division)) %>% unique()
div_ties <- div_ties %>% bind_rows(div_ties_3 %>% filter(n == 2) %>% select(focal,sim,wins,division,n)) %>% unique()
}
# Two teams, tiebreaker 1 (head-to-head)
if (nrow(div_ties %>% filter(n == 2)) > 0) {
div_ties_2 <- div_ties %>% filter(n == 2) %>% group_by(division, sim) %>% mutate(opp = ifelse(focal == focal[1], focal[2],focal[1])) %>% left_join(h2h, by = c("focal","opp","sim")) %>% filter(h2h_win_pct == max(h2h_win_pct)) %>% mutate(n = n())
div_winners <- div_winners %>% bind_rows(div_ties_2 %>% filter(n == 1) %>% select(focal,sim,wins,division)) %>% unique()
}
# Two teams, tiebreaker 2 (division record)
if (nrow(div_ties_2 %>% filter(n == 2)) > 0) {
div_ties_2 <- div_ties_2 %>% filter(n == 2) %>% left_join(div_record, by = c("focal","sim")) %>% filter(div_win_pct == max(div_win_pct)) %>% mutate(n = n())
div_winners <- div_winners %>% bind_rows(div_ties_2 %>% filter(n == 1) %>% select(focal,sim,wins,division)) %>% unique()
}
# Two teams, tiebreaker 3 (common games)
if (nrow(div_ties_2 %>% filter(n == 2)) > 0) {
div_ties_2 <- div_ties_2 %>% filter(n == 2)
team_pairs <- div_ties_2 %>% group_by(sim, division) %>% slice(1)
common_win_pct <- tibble(focal = as.character(), sim = as.integer(), common_win_pct = as.numeric())
for (i in 1:nrow(team_pairs)) {
team1_opps <- season_games$opp[season_games$focal == team_pairs$focal[i]]
team2_opps <- season_games$opp[season_games$focal == team_pairs$opp[i]]
common_opps <- team1_opps[team1_opps %in% team2_opps]
temp <- focal %>% filter(sim == team_pairs$sim[i] & focal == team_pairs$focal[i] & opp %in% common_opps)
common_win_pct <- bind_rows(common_win_pct,tibble(focal = team_pairs$focal[i], sim = team_pairs$sim[i], common_win_pct = mean(temp$win)))
temp <- focal %>% filter(sim == team_pairs$sim[i] & focal == team_pairs$opp[i] & opp %in% common_opps)
common_win_pct <- bind_rows(common_win_pct,tibble(focal = team_pairs$opp[i], sim = team_pairs$sim[i], common_win_pct = mean(temp$win)))
}
div_ties_2 <- div_ties_2 %>% left_join(common_win_pct, by = c("focal","sim")) %>% filter(common_win_pct == max(common_win_pct)) %>% mutate(n = n())
div_winners <- div_winners %>% bind_rows(div_ties_2 %>% filter(n == 1) %>% select(focal,sim,wins,division)) %>% unique()
}
# Two teams, tiebreaker 4 (conference record)
if (nrow(div_ties_2 %>% filter(n == 2)) > 0) {
div_ties_2 <- div_ties_2 %>% filter(n == 2) %>% left_join(conf_record, by = c("focal","sim")) %>% filter(conf_win_pct == max(conf_win_pct)) %>% mutate(n = n())
div_winners <- div_winners %>% bind_rows(div_ties_2 %>% filter(n == 1) %>% select(focal,sim,wins,division)) %>% unique()
}
# Two teams, tiebreaker 5 (strength of victory)
if (nrow(div_ties_2 %>% filter(n == 2)) > 0) {
div_ties_2 <- div_ties_2 %>% filter(n == 2) %>% left_join(sov, by = c("focal","sim")) %>% filter(sov == max(sov)) %>% mutate(n = n())
div_winners <- div_winners %>% bind_rows(div_ties_2 %>% filter(n == 1) %>% select(focal,sim,wins,division)) %>% unique()
}
# Two teams, tiebreaker 6 (strength of schedule) and then random winner
if (nrow(div_ties_2 %>% filter(n == 2)) > 0) {
div_ties_2 <- div_ties_2 %>% filter(n == 2) %>% left_join(sos, by = c("focal","sim")) %>% filter(sos == max(sos)) %>% mutate(random = runif(n())) %>% arrange(random) %>% slice(1)
div_winners <- div_winners %>% bind_rows(div_ties_2 %>% select(focal,sim,wins,division)) %>% unique()
}
div_winners <- div_winners %>% ungroup() %>% select(focal,sim,division) %>% unique()
## Playoff Bye
bye_ties <- focal %>% filter(paste(focal,sim) %in% paste(div_winners$focal,div_winners$sim)) %>% group_by(focal, sim) %>% summarise(wins = sum(win)) %>% left_join(rename(conf_divs,focal = team), by = "focal") %>% select(-division) %>% group_by(conf, sim) %>% filter(wins == max(wins)) %>% mutate(n = n())
byes <- bye_ties %>% filter(n == 1)
# Four teams, tiebreaker 1 (head-to-head sweep)
if (nrow(bye_ties %>% filter(n == 4)) > 0) {
bye_ties_4 <- bye_ties %>% arrange(sim) %>% filter(n == 4) %>% group_by(conf, sim) %>% mutate(opp1 = ifelse(focal == focal[1], focal[2], ifelse(focal == focal[2], focal[3], ifelse(focal == focal[3], focal[4], focal[1]))), opp2 = ifelse(focal == focal[1], focal[3], ifelse(focal == focal[2], focal[4], ifelse(focal == focal[3], focal[1], focal[2]))), opp3 = ifelse(focal == focal[1], focal[4], ifelse(focal == focal[2], focal[1], ifelse(focal == focal[3], focal[2], focal[3])))) %>% left_join(rename(h2h,opp1 = opp, h2h1 = h2h_win_pct), by = c("focal","opp1","sim")) %>% left_join(rename(h2h,opp2 = opp, h2h2 = h2h_win_pct), by = c("focal","opp2","sim")) %>% left_join(rename(h2h,opp3 = opp, h2h3 = h2h_win_pct), by = c("focal","opp3","sim")) %>% mutate(h2h_win_pct = h2h1 + h2h2 + h2h3, all_wins = ifelse(h2h_win_pct == 3,1,0), all_losses = ifelse(h2h_win_pct == 0,1,0), across(everything(),~ replace(., which(is.na(.)), 0))) %>% filter(all_losses != 1) %>% mutate(n = n())
byes <- byes %>% bind_rows(bye_ties_4 %>% filter(all_wins == 1) %>% select(focal,sim,wins,conf,n)) %>% unique()
bye_ties <- bye_ties %>% bind_rows(bye_ties_4 %>% filter(n > 1) %>% select(focal,sim,wins,conf,n)) %>% unique()
}
# Three teams, tiebreaker 1 (head-to-head sweep)
if (nrow(bye_ties %>% filter(n == 3)) > 0) {
bye_ties_3 <- bye_ties %>% arrange(sim) %>% filter(n == 3) %>% group_by(conf, sim) %>% mutate(opp1 = ifelse(focal == focal[1], focal[2], ifelse(focal == focal[2], focal[3], focal[1])), opp2 = ifelse(focal == focal[1], focal[3], ifelse(focal == focal[2], focal[1], focal[2]))) %>% left_join(rename(h2h,opp1 = opp), by = c("focal","opp1","sim")) %>% left_join(rename(h2h,opp2 = opp), by = c("focal","opp2","sim")) %>% mutate(h2h_win_pct = h2h_win_pct.x + h2h_win_pct.y, all_wins = ifelse(h2h_win_pct == 2,1,0), all_losses = ifelse(h2h_win_pct == 0,1,0), across(everything(),~ replace(., which(is.na(.)), 0))) %>% filter(all_losses != 1) %>% mutate(n = n())
byes <- byes %>% bind_rows(bye_ties_3 %>% filter(all_wins == 1) %>% select(focal,sim,wins,conf,n)) %>% unique()
bye_ties <- bye_ties %>% bind_rows(bye_ties_3 %>% filter(n == 2) %>% select(focal,sim,wins,conf,n)) %>% unique()
bye_ties_3 <- bye_ties_3 %>% filter(n == 3)
}
if (nrow(bye_ties %>% filter(n == 4)) > 0) {
bye_ties_3 <- bye_ties_3 %>% bind_rows(bye_ties_4 %>% filter(n > 2) %>% select(focal,sim,wins,conf,n)) %>% unique()
}
# Three (or more) teams, tiebreaker 2 (conference record)
if (nrow(bye_ties_3) > 0) {
bye_ties_3 <- bye_ties_3 %>% select(focal:conf) %>% left_join(conf_record, by = c("focal","sim")) %>% filter(conf_win_pct == max(conf_win_pct)) %>% mutate(n = n())
byes <- byes %>% bind_rows(bye_ties_3 %>% filter(n == 1) %>% select(focal,sim,wins,conf)) %>% unique()
bye_ties <- bye_ties %>% bind_rows(bye_ties_3 %>% filter(n == 2) %>% select(focal,sim,wins,conf,n)) %>% unique()
}
# Three teams, tiebreaker 3 (common games)
if (nrow(bye_ties_3 %>% filter(n == 3)) > 0) {
bye_ties_3 <- bye_ties_3 %>% filter(n == 3) %>% mutate(opp1 = ifelse(focal == focal[1], focal[2], ifelse(focal == focal[2], focal[3], focal[1])), opp2 = ifelse(focal == focal[1], focal[3], ifelse(focal == focal[2], focal[1], focal[2])))
team_trios <- bye_ties_3 %>% group_by(sim, conf) %>% slice(1)
common_win_pct <- tibble(focal = as.character(), sim = as.integer(), common_win_pct = as.numeric())
for (i in 1:nrow(team_trios)) {
team1_opps <- season_games$opp[season_games$focal == team_trios$focal[i]]
team2_opps <- season_games$opp[season_games$focal == team_trios$opp1[i]]
team3_opps <- season_games$opp[season_games$focal == team_trios$opp2[i]]
common_opps <- team1_opps[team1_opps %in% team2_opps]
common_opps <- common_opps[common_opps %in% team3_opps]
if (length(common_opps) >= 4) {
temp <- focal %>% filter(sim == team_trios$sim[i] & focal == team_trios$focal[i] & opp %in% common_opps)
common_win_pct <- bind_rows(common_win_pct,tibble(focal = team_trios$focal[i], sim = team_trios$sim[i], common_win_pct = mean(temp$win)))
temp <- focal %>% filter(sim == team_trios$sim[i] & focal == team_trios$opp1[i] & opp %in% common_opps)
common_win_pct <- bind_rows(common_win_pct,tibble(focal = team_trios$opp1[i], sim = team_trios$sim[i], common_win_pct = mean(temp$win)))
temp <- focal %>% filter(sim == team_trios$sim[i] & focal == team_trios$opp2[i] & opp %in% common_opps)
common_win_pct <- bind_rows(common_win_pct,tibble(focal = team_trios$opp2[i], sim = team_trios$sim[i], common_win_pct = mean(temp$win)))
}
}
bye_ties_3 <- bye_ties_3 %>% left_join(common_win_pct, by = c("focal","sim")) %>% mutate(common_win_pct = ifelse(is.na(common_win_pct),0,common_win_pct)) %>% filter(common_win_pct == max(common_win_pct)) %>% mutate(n = n())
byes <- byes %>% bind_rows(bye_ties_3 %>% filter(n == 1) %>% select(focal,sim,wins,conf)) %>% unique()
bye_ties <- bye_ties %>% bind_rows(bye_ties_3 %>% filter(n == 2) %>% select(focal,sim,wins,conf,n)) %>% unique()
}
# Three teams, tiebreaker 4 (strength of victory)
if (nrow(bye_ties_3 %>% filter(n >= 3)) > 0) {
bye_ties_3 <- bye_ties_3 %>% filter(n >= 3) %>% left_join(sov, by = c("focal","sim")) %>% filter(sov == max(sov)) %>% mutate(n = n())
byes <- byes %>% bind_rows(bye_ties_3 %>% filter(n == 1) %>% select(focal,sim,wins,conf)) %>% unique()
bye_ties <- bye_ties %>% bind_rows(bye_ties_3 %>% filter(n == 2) %>% select(focal,sim,wins,conf,n)) %>% unique()
}
# Three teams, tiebreaker 5 (strength of schedule) and then random winner
if (nrow(bye_ties_3 %>% filter(n >= 3)) > 0) {
bye_ties_3 <- bye_ties_3 %>% filter(n >= 3) %>% left_join(sos, by = c("focal","sim")) %>% filter(sos == max(sos)) %>% mutate(random = runif(n())) %>% arrange(random) %>% slice(1)
byes <- byes %>% bind_rows(bye_ties_3 %>% select(focal,sim,wins,conf)) %>% unique()
}
# Two teams, tiebreaker 1 (head-to-head)
if (nrow(bye_ties %>% filter(n == 2)) > 0) {
bye_ties_2 <- bye_ties %>% filter(n == 2) %>% group_by(conf, sim) %>% mutate(opp = ifelse(focal == focal[1], focal[2],focal[1])) %>% left_join(h2h, by = c("focal","opp","sim")) %>% mutate(h2h_win_pct = ifelse(is.na(h2h_win_pct),0,h2h_win_pct)) %>% filter(h2h_win_pct == max(h2h_win_pct)) %>% mutate(n = n())
byes <- byes %>% bind_rows(bye_ties_2 %>% filter(n == 1) %>% select(focal,sim,wins,conf)) %>% unique()
}
# Two teams, tiebreaker 2 (conference record)
if (nrow(bye_ties_2 %>% filter(n == 2)) > 0) {
bye_ties_2 <- bye_ties_2 %>% filter(n == 2) %>% left_join(conf_record, by = c("focal","sim")) %>% filter(conf_win_pct == max(conf_win_pct)) %>% mutate(n = n())
byes <- byes %>% bind_rows(bye_ties_2 %>% filter(n == 1) %>% select(focal,sim,wins,conf)) %>% unique()
}
# Two teams, tiebreaker 3 (common games)
if (nrow(bye_ties_2 %>% filter(n == 2)) > 0) {
bye_ties_2 <- bye_ties_2 %>% filter(n == 2)
team_pairs <- bye_ties_2 %>% group_by(sim, conf) %>% slice(1)
common_win_pct <- tibble(focal = as.character(), sim = as.integer(), common_win_pct = as.numeric())
for (i in 1:nrow(team_pairs)) {
team1_opps <- season_games$opp[season_games$focal == team_pairs$focal[i]]
team2_opps <- season_games$opp[season_games$focal == team_pairs$opp[i]]
common_opps <- team1_opps[team1_opps %in% team2_opps]
temp <- focal %>% filter(sim == team_pairs$sim[i] & focal == team_pairs$focal[i] & opp %in% common_opps)
common_win_pct <- bind_rows(common_win_pct,tibble(focal = team_pairs$focal[i], sim = team_pairs$sim[i], common_win_pct = mean(temp$win)))
temp <- focal %>% filter(sim == team_pairs$sim[i] & focal == team_pairs$opp[i] & opp %in% common_opps)
common_win_pct <- bind_rows(common_win_pct,tibble(focal = team_pairs$opp[i], sim = team_pairs$sim[i], common_win_pct = mean(temp$win)))
}
bye_ties_2 <- bye_ties_2 %>% left_join(common_win_pct, by = c("focal","sim")) %>% filter(common_win_pct == max(common_win_pct)) %>% mutate(n = n())
byes <- byes %>% bind_rows(bye_ties_2 %>% filter(n == 1) %>% select(focal,sim,wins,conf)) %>% unique()
}
# Two teams, tiebreaker 4 (strength of victory)
if (nrow(bye_ties_2 %>% filter(n == 2)) > 0) {
bye_ties_2 <- bye_ties_2 %>% filter(n == 2) %>% left_join(sov, by = c("focal","sim")) %>% filter(sov == max(sov)) %>% mutate(n = n())
byes <- byes %>% bind_rows(bye_ties_2 %>% filter(n == 1) %>% select(focal,sim,wins,conf)) %>% unique()
}
# Two teams, tiebreaker 5 (strength of schedule) and then random winner
if (nrow(bye_ties_2 %>% filter(n == 2)) > 0) {
bye_ties_2 <- bye_ties_2 %>% filter(n == 2) %>% left_join(sos, by = c("focal","sim")) %>% filter(sos == max(sos)) %>% mutate(random = runif(n())) %>% arrange(random) %>% slice(1)
byes <- byes %>% bind_rows(bye_ties_2 %>% select(focal,sim,wins,conf)) %>% unique()
}
byes <- byes %>% ungroup() %>% select(focal,sim,conf) %>% unique()
print(nrow(byes) == n_sims*2)
print(nrow(div_winners) == n_sims*8)
print(as_tibble(elo::final.elos(elo), rownames = "focal") %>%
rename(elo = value) %>%
left_join(byes %>% group_by(focal) %>% summarise(bye = n()/n_sims*100), by = "focal") %>%
left_join(div_winners %>% group_by(focal) %>% summarise(div = n()/n_sims*100), by = "focal") %>%
rename(team = focal) %>%
left_join(top_draft_picks, by = "team") %>%
mutate(across(everything(),~ replace(., which(is.na(.)), 0))) %>%
arrange(desc(elo)))
## Wild Cards
wc1_ties <- focal %>% filter(!paste(focal,sim) %in% paste(div_winners$focal,div_winners$sim)) %>% group_by(focal, sim) %>% summarise(wins = sum(win)) %>% left_join(rename(conf_divs,focal = team), by = "focal") %>% select(-division) %>% group_by(conf, sim) %>% filter(wins == max(wins)) %>% mutate(n = n())
wc1 <- wc1_ties %>% filter(n == 1)
wc1
tbale
table(wc1_ties$n)
predict(elo,tibble(home_team = "SF",away_team = "DAL"))
install.packages("nflseedR")
d <- nflseedR::load_sharpe_games()
d
summary(d)
table(d$home_team)
length(unique(d$home_team))
as.Date("2024-10-27")
as.Date("2024-10-27")-(15*7)
as.Date("2024-10-27")-(18*7)
2228/16070
source("~/Library/CloudStorage/GoogleDrive-jonathanjkent@gmail.com/My Drive/Running/strava_blocks.R")
